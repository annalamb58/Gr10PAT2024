/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frontend;

import Backend.DosageCalculator;
import Backend.MedsManager;
import Backend.SpeciesManager;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;

/**
 *
 * @author HYSTOU
 */
public class UI extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    public UI() throws FileNotFoundException {
        initComponents();

        //Initialise Species Screen
        //1. Get list from backend
        //2. Create DefaultListModel 
        //3. Add list to model
        //4, Set model
        //Initialise xxxx Screen
        updateSpeciesList();
        updateMedsList();

    }

    public void updateSpeciesList() throws FileNotFoundException {
        //populating the species list
        String[] species = SpeciesManager.getSpeciesList();

        //Populate lists
        DefaultListModel speciesListModel = new DefaultListModel();
        for (int i = 0; i < species.length; i++) {
            speciesListModel.addElement(species[i]);

        }
        list_SPECIES_SpeciesList.setModel(speciesListModel);

        //Populate combo boxes (species)
        DefaultComboBoxModel comboBoxModelspecies = new DefaultComboBoxModel(species);
        comboBox_MED_Species.setModel(comboBoxModelspecies);
        comboBox_CAL_Species.setModel(comboBoxModelspecies);
    }

    public void updateMedsList() throws FileNotFoundException {
        //populating the meds list
        String[] meds = MedsManager.getMedsList();
        String[] firstMeds = MedsManager.getFirstMeds(meds);
        DefaultListModel medsListModel = new DefaultListModel();
        for (int i = 0; i < meds.length; i++) {
            medsListModel.addElement(firstMeds[i]);

        }
        list_MED_MedsList.setModel(medsListModel);

        //Populate combo boxes (meds)
        DefaultComboBoxModel comboBoxModelMeds = new DefaultComboBoxModel(firstMeds);
        comboBox_CAL_Meds.setModel(comboBoxModelMeds);
    }

    public void populateMedsSpeciesComboBox(String species) throws FileNotFoundException {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LOCATION_TAB = new javax.swing.JTabbedPane();
        DOSAGE_CAL_PANE = new javax.swing.JPanel();
        label_CAL_Speices = new javax.swing.JLabel();
        label_CAL_Weight = new javax.swing.JLabel();
        label_CAL_Medication = new javax.swing.JLabel();
        comboBox_CAL_Species = new javax.swing.JComboBox<>();
        button_CAL_Calculate = new javax.swing.JButton();
        label_CAL_Dosage = new javax.swing.JLabel();
        textField_CAL_Weight = new javax.swing.JTextField();
        checkbox_CAL_HighDose_YES = new javax.swing.JCheckBox();
        label_CAl_HighDose = new javax.swing.JLabel();
        comboBox_CAL_Meds = new javax.swing.JComboBox<>();
        label_CAL_DosageAnswer = new javax.swing.JLabel();
        SPECIES_PANE = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        list_SPECIES_SpeciesList = new javax.swing.JList<>();
        label_SPECIES_SpeciesList = new javax.swing.JLabel();
        label_SPECIES_Name = new javax.swing.JLabel();
        textField_SPECIES_Species = new javax.swing.JTextField();
        button_SPECIES_Add = new javax.swing.JButton();
        label_SPECIES_SelectDelete = new javax.swing.JLabel();
        button_SPECIES_Delete = new javax.swing.JButton();
        MEDICATION_PANE = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        list_MED_MedsList = new javax.swing.JList<>();
        textField_MED_MedName = new javax.swing.JTextField();
        textField_MED_FormulaAdd = new javax.swing.JTextField();
        button_MED_MedicationAdd = new javax.swing.JButton();
        label_MED_FormulaAdd = new javax.swing.JLabel();
        label_MED_MedName = new javax.swing.JLabel();
        label_MED_FormulaGuide = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        textArea_MED_FormulaGuide = new javax.swing.JTextArea();
        label_MED_MedsList = new javax.swing.JLabel();
        label_MED_Species = new javax.swing.JLabel();
        comboBox_MED_Species = new javax.swing.JComboBox<>();
        label_MED_SelectDelete = new javax.swing.JLabel();
        button_MED_Delete = new javax.swing.JButton();
        label_MED_HighDose = new javax.swing.JLabel();
        checkbox_MED_HighDose_YES = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LOCATION_TAB.setBackground(new java.awt.Color(217, 217, 217));
        LOCATION_TAB.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        LOCATION_TAB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LOCATION_TABMouseClicked(evt);
            }
        });

        DOSAGE_CAL_PANE.setBackground(new java.awt.Color(217, 217, 217));
        DOSAGE_CAL_PANE.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 255)));

        label_CAL_Speices.setText("Species");

        label_CAL_Weight.setText("Weight");

        label_CAL_Medication.setText("Medication");

        comboBox_CAL_Species.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBox_CAL_Species.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBox_CAL_SpeciesActionPerformed(evt);
            }
        });

        button_CAL_Calculate.setText("CALCULATE");
        button_CAL_Calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_CAL_CalculateActionPerformed(evt);
            }
        });

        label_CAL_Dosage.setText("Dosage");

        checkbox_CAL_HighDose_YES.setText("Yes");
        checkbox_CAL_HighDose_YES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkbox_CAL_HighDose_YESActionPerformed(evt);
            }
        });

        label_CAl_HighDose.setText("High Dose?");

        comboBox_CAL_Meds.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        label_CAL_DosageAnswer.setBackground(new java.awt.Color(255, 255, 255));
        label_CAL_DosageAnswer.setForeground(new java.awt.Color(204, 0, 0));
        label_CAL_DosageAnswer.setText("bnnnnnnnnnnnnnnnnnnnn");

        javax.swing.GroupLayout DOSAGE_CAL_PANELayout = new javax.swing.GroupLayout(DOSAGE_CAL_PANE);
        DOSAGE_CAL_PANE.setLayout(DOSAGE_CAL_PANELayout);
        DOSAGE_CAL_PANELayout.setHorizontalGroup(
            DOSAGE_CAL_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DOSAGE_CAL_PANELayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(button_CAL_Calculate)
                .addGap(41, 41, 41))
            .addGroup(DOSAGE_CAL_PANELayout.createSequentialGroup()
                .addGroup(DOSAGE_CAL_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DOSAGE_CAL_PANELayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(DOSAGE_CAL_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_CAL_Speices)
                            .addComponent(label_CAL_Weight)
                            .addComponent(label_CAL_Medication)
                            .addComponent(label_CAl_HighDose))
                        .addGap(56, 56, 56)
                        .addGroup(DOSAGE_CAL_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(comboBox_CAL_Species, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textField_CAL_Weight, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                            .addComponent(checkbox_CAL_HighDose_YES, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboBox_CAL_Meds, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(DOSAGE_CAL_PANELayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(DOSAGE_CAL_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_CAL_Dosage, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label_CAL_DosageAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(197, Short.MAX_VALUE))
        );
        DOSAGE_CAL_PANELayout.setVerticalGroup(
            DOSAGE_CAL_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DOSAGE_CAL_PANELayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(DOSAGE_CAL_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_CAL_Speices)
                    .addComponent(comboBox_CAL_Species, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(DOSAGE_CAL_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_CAL_Weight)
                    .addComponent(textField_CAL_Weight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(DOSAGE_CAL_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DOSAGE_CAL_PANELayout.createSequentialGroup()
                        .addComponent(label_CAL_Medication)
                        .addGap(19, 19, 19)
                        .addGroup(DOSAGE_CAL_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(button_CAL_Calculate)
                            .addComponent(label_CAl_HighDose))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addComponent(label_CAL_Dosage))
                    .addGroup(DOSAGE_CAL_PANELayout.createSequentialGroup()
                        .addComponent(comboBox_CAL_Meds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(checkbox_CAL_HighDose_YES)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_CAL_DosageAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        LOCATION_TAB.addTab("Dosage Calculator", DOSAGE_CAL_PANE);

        SPECIES_PANE.setBackground(new java.awt.Color(217, 217, 217));

        list_SPECIES_SpeciesList.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        list_SPECIES_SpeciesList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane12.setViewportView(list_SPECIES_SpeciesList);

        label_SPECIES_SpeciesList.setText("Species");

        label_SPECIES_Name.setText("Name");

        button_SPECIES_Add.setText("ADD");
        button_SPECIES_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_SPECIES_AddActionPerformed(evt);
            }
        });

        label_SPECIES_SelectDelete.setText("Select Species from list to Delete");

        button_SPECIES_Delete.setText("DELETE");
        button_SPECIES_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_SPECIES_DeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SPECIES_PANELayout = new javax.swing.GroupLayout(SPECIES_PANE);
        SPECIES_PANE.setLayout(SPECIES_PANELayout);
        SPECIES_PANELayout.setHorizontalGroup(
            SPECIES_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SPECIES_PANELayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SPECIES_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SPECIES_PANELayout.createSequentialGroup()
                        .addComponent(label_SPECIES_SpeciesList)
                        .addGap(26, 26, 26))
                    .addGroup(SPECIES_PANELayout.createSequentialGroup()
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(SPECIES_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SPECIES_PANELayout.createSequentialGroup()
                                .addGroup(SPECIES_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(SPECIES_PANELayout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addComponent(label_SPECIES_Name)
                                        .addGap(34, 34, 34)
                                        .addComponent(textField_SPECIES_Species, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(SPECIES_PANELayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(label_SPECIES_SelectDelete)
                                        .addGap(18, 18, 18)
                                        .addComponent(button_SPECIES_Delete)))
                                .addGap(0, 81, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SPECIES_PANELayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(button_SPECIES_Add)
                                .addGap(143, 143, 143))))))
        );
        SPECIES_PANELayout.setVerticalGroup(
            SPECIES_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SPECIES_PANELayout.createSequentialGroup()
                .addGroup(SPECIES_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SPECIES_PANELayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(SPECIES_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textField_SPECIES_Species, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label_SPECIES_Name))
                        .addGap(32, 32, 32)
                        .addComponent(button_SPECIES_Add)
                        .addGap(52, 52, 52)
                        .addGroup(SPECIES_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_SPECIES_SelectDelete)
                            .addComponent(button_SPECIES_Delete)))
                    .addGroup(SPECIES_PANELayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(label_SPECIES_SpeciesList)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        LOCATION_TAB.addTab("Species ", SPECIES_PANE);

        MEDICATION_PANE.setBackground(new java.awt.Color(217, 217, 217));

        list_MED_MedsList.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        list_MED_MedsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane10.setViewportView(list_MED_MedsList);

        textField_MED_MedName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField_MED_MedNameActionPerformed(evt);
            }
        });

        button_MED_MedicationAdd.setText("ADD");
        button_MED_MedicationAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_MED_MedicationAddActionPerformed(evt);
            }
        });

        label_MED_FormulaAdd.setText("Formula");

        label_MED_MedName.setText("Medication Name");

        label_MED_FormulaGuide.setText("Formula Guide");

        textArea_MED_FormulaGuide.setEditable(false);
        textArea_MED_FormulaGuide.setColumns(20);
        textArea_MED_FormulaGuide.setRows(5);
        jScrollPane15.setViewportView(textArea_MED_FormulaGuide);

        label_MED_MedsList.setBackground(new java.awt.Color(251, 193, 110));
        label_MED_MedsList.setText("Medications");

        label_MED_Species.setText("Species");

        comboBox_MED_Species.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        label_MED_SelectDelete.setText("Select Medication from list to Delete");

        button_MED_Delete.setText("DELETE");
        button_MED_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_MED_DeleteActionPerformed(evt);
            }
        });

        label_MED_HighDose.setText("High Dose?");

        checkbox_MED_HighDose_YES.setText("Yes");

        javax.swing.GroupLayout MEDICATION_PANELayout = new javax.swing.GroupLayout(MEDICATION_PANE);
        MEDICATION_PANE.setLayout(MEDICATION_PANELayout);
        MEDICATION_PANELayout.setHorizontalGroup(
            MEDICATION_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MEDICATION_PANELayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MEDICATION_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MEDICATION_PANELayout.createSequentialGroup()
                        .addComponent(label_MED_MedsList)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(MEDICATION_PANELayout.createSequentialGroup()
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(MEDICATION_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MEDICATION_PANELayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(label_MED_MedName)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MEDICATION_PANELayout.createSequentialGroup()
                                .addGroup(MEDICATION_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(MEDICATION_PANELayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                                        .addComponent(label_MED_SelectDelete))
                                    .addGroup(MEDICATION_PANELayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(MEDICATION_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jScrollPane15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, MEDICATION_PANELayout.createSequentialGroup()
                                                .addGroup(MEDICATION_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(textField_MED_MedName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(label_MED_FormulaGuide, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, MEDICATION_PANELayout.createSequentialGroup()
                                                        .addComponent(label_MED_HighDose)
                                                        .addGap(30, 30, 30)
                                                        .addComponent(checkbox_MED_HighDose_YES)))
                                                .addGap(0, 0, Short.MAX_VALUE)))))
                                .addGroup(MEDICATION_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(MEDICATION_PANELayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(MEDICATION_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(label_MED_FormulaAdd)
                                            .addComponent(textField_MED_FormulaAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MEDICATION_PANELayout.createSequentialGroup()
                                                .addComponent(button_MED_MedicationAdd)
                                                .addGap(40, 40, 40))
                                            .addComponent(comboBox_MED_Species, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(label_MED_Species)))
                                    .addGroup(MEDICATION_PANELayout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addComponent(button_MED_Delete)))))))
                .addContainerGap())
        );
        MEDICATION_PANELayout.setVerticalGroup(
            MEDICATION_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MEDICATION_PANELayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(label_MED_MedsList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MEDICATION_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MEDICATION_PANELayout.createSequentialGroup()
                        .addGroup(MEDICATION_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_MED_SelectDelete)
                            .addComponent(button_MED_Delete))
                        .addGap(31, 31, 31)
                        .addGroup(MEDICATION_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_MED_MedName)
                            .addComponent(label_MED_Species))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MEDICATION_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textField_MED_MedName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBox_MED_Species, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(MEDICATION_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_MED_HighDose)
                            .addComponent(checkbox_MED_HighDose_YES))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label_MED_FormulaGuide)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MEDICATION_PANELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MEDICATION_PANELayout.createSequentialGroup()
                                .addComponent(label_MED_FormulaAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(textField_MED_FormulaAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(button_MED_MedicationAdd))
                            .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        LOCATION_TAB.addTab("Medication ", MEDICATION_PANE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LOCATION_TAB)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LOCATION_TAB)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LOCATION_TABMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LOCATION_TABMouseClicked
        //LOCATION_TAB.setBackground(Color.red);

    }//GEN-LAST:event_LOCATION_TABMouseClicked

    private void comboBox_CAL_SpeciesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBox_CAL_SpeciesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBox_CAL_SpeciesActionPerformed

    private void button_MED_MedicationAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_MED_MedicationAddActionPerformed
        try {
            // get stuff from frontend
            String newDose = " ";
            String newMed = textField_MED_MedName.getText();
            String newSpecies = (String) comboBox_MED_Species.getSelectedItem();
            String newFormula = textField_MED_FormulaAdd.getText();
            if (checkbox_MED_HighDose_YES.isSelected()) {
                newDose = "high";
            } else {
                newDose = "low";
            }

            MedsManager.addNewMed(newMed, newSpecies, newFormula, newDose);
            // update frontend
            updateMedsList();
            textField_MED_MedName.setText("");

        } catch (IOException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_button_MED_MedicationAddActionPerformed

    private void button_MED_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_MED_DeleteActionPerformed
        try {
            //get
            String selectedMeds = list_MED_MedsList.getSelectedValue();
            MedsManager.deleteMeds(selectedMeds);
            updateMedsList();
        } catch (Exception ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button_MED_DeleteActionPerformed

    private void button_SPECIES_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_SPECIES_DeleteActionPerformed
        try {
            // get stuff from frontend
            String seletedSpecies = list_SPECIES_SpeciesList.getSelectedValue();
            // send to backend
            SpeciesManager.deleteSpecies(seletedSpecies);
            // updata frontend
            updateSpeciesList();

        } catch (Exception ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }
        {

        }
    }//GEN-LAST:event_button_SPECIES_DeleteActionPerformed

    private void button_SPECIES_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_SPECIES_AddActionPerformed

        try {
            // get stuff from frontend
            String NewSpecies = textField_SPECIES_Species.getText();
            // send to backend
            SpeciesManager.addSpecies(NewSpecies);
            // updata frontend
            updateSpeciesList();
            textField_SPECIES_Species.setText("");

        } catch (IOException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_button_SPECIES_AddActionPerformed

    private void textField_MED_MedNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField_MED_MedNameActionPerformed
// This is when you click enter it show add it without clicking thebutton 
// This code is not needed but in case it is needed in the future it has been commented and not deleted
//        try {
//            // get stuff from frontend
//            String NewMeds = textField_MED_MedName.getText();
//           String NewMed = textField_MED_MedName.getText();
//            String newSpecies = (String)comboBox_MED_Species.getSelectedItem();
//            String NewFormula = TextField_MED_FormulaAdd.getText();
//            // send to backend
//            MedsManager.addNewMed(NewMeds, newSpecies, NewFormula);
//            // updata frontend
//            updateMedsList();
//
//        } catch (IOException ex) {
//            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
//        }


    }//GEN-LAST:event_textField_MED_MedNameActionPerformed

    private void checkbox_CAL_HighDose_YESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkbox_CAL_HighDose_YESActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkbox_CAL_HighDose_YESActionPerformed

    private void button_CAL_CalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_CAL_CalculateActionPerformed
        // Calculating the dosage:
        try {
            label_CAL_DosageAnswer.setText(null);
            // getting information entered by user
            String doseWanted = "";
            String selectedMed = (String) comboBox_CAL_Meds.getSelectedItem();
            String selectedSpecies = (String) comboBox_CAL_Species.getSelectedItem();
            String weightEnterd = textField_CAL_Weight.getText();
            if (checkbox_MED_HighDose_YES.isSelected()) {
                doseWanted = "high";
            } else {
                doseWanted = "low";
            }
            // send to backend
            DosageCalculator.CalculatingDose(selectedMed, selectedSpecies, weightEnterd, doseWanted);

            // update fronted
            // Call the backend method to calculate the dosage
            double calculatedDose = DosageCalculator.CalculatingDose(selectedMed, selectedSpecies, weightEnterd, doseWanted);

            // Update frontend: display the calculated dosage in the label
            label_CAL_DosageAnswer.setText("Calculated dosage: " + calculatedDose);

        } catch (IOException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_button_CAL_CalculateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new UI().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(UI.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DOSAGE_CAL_PANE;
    private javax.swing.JTabbedPane LOCATION_TAB;
    private javax.swing.JPanel MEDICATION_PANE;
    private javax.swing.JPanel SPECIES_PANE;
    private javax.swing.JButton button_CAL_Calculate;
    private javax.swing.JButton button_MED_Delete;
    private javax.swing.JButton button_MED_MedicationAdd;
    private javax.swing.JButton button_SPECIES_Add;
    private javax.swing.JButton button_SPECIES_Delete;
    private javax.swing.JCheckBox checkbox_CAL_HighDose_YES;
    private javax.swing.JCheckBox checkbox_MED_HighDose_YES;
    private javax.swing.JComboBox<String> comboBox_CAL_Meds;
    private javax.swing.JComboBox<String> comboBox_CAL_Species;
    private javax.swing.JComboBox<String> comboBox_MED_Species;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JLabel label_CAL_Dosage;
    private javax.swing.JLabel label_CAL_DosageAnswer;
    private javax.swing.JLabel label_CAL_Medication;
    private javax.swing.JLabel label_CAL_Speices;
    private javax.swing.JLabel label_CAL_Weight;
    private javax.swing.JLabel label_CAl_HighDose;
    private javax.swing.JLabel label_MED_FormulaAdd;
    private javax.swing.JLabel label_MED_FormulaGuide;
    private javax.swing.JLabel label_MED_HighDose;
    private javax.swing.JLabel label_MED_MedName;
    private javax.swing.JLabel label_MED_MedsList;
    private javax.swing.JLabel label_MED_SelectDelete;
    private javax.swing.JLabel label_MED_Species;
    private javax.swing.JLabel label_SPECIES_Name;
    private javax.swing.JLabel label_SPECIES_SelectDelete;
    private javax.swing.JLabel label_SPECIES_SpeciesList;
    private javax.swing.JList<String> list_MED_MedsList;
    private javax.swing.JList<String> list_SPECIES_SpeciesList;
    private javax.swing.JTextArea textArea_MED_FormulaGuide;
    private javax.swing.JTextField textField_CAL_Weight;
    private javax.swing.JTextField textField_MED_FormulaAdd;
    private javax.swing.JTextField textField_MED_MedName;
    private javax.swing.JTextField textField_SPECIES_Species;
    // End of variables declaration//GEN-END:variables
}
